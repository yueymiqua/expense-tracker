{"ast":null,"code":"var _jsxFileName = \"/Users/pierreyue/Desktop/expense-tracker1/client/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const globalContext = /*#__PURE__*/createContext(initialState); // Provider component\n\nexport default function GlobalProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(globalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/pierreyue/Desktop/expense-tracker1/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","globalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","addTransaction","transaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,eAAe,SAASK,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CADmD,CAGnD;;AACA,iBAAeS,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,WAASe,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BV,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID;;AAED,WAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACnCZ,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;;AAED,sBAAQ,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCnB,MAAAA,YAAY,EAACM,KAAK,CAACN,YADkB;AAErCgB,MAAAA,iBAFqC;AAGrCE,MAAAA;AAHqC,KAA/B;AAAA,cAKLb;AALK;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD;;GAzCuBD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial State\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}\n\n// Create context\nexport const globalContext = createContext(initialState);\n\n// Provider component\nexport default function GlobalProvider({ children }) {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n\n      dispatch({\n        type: 'GET TRANSACTIONS',\n        payload: res.data.data\n      })\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      })\n    }\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<globalContext.Provider value={{\n    transactions:state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}  \n  </globalContext.Provider>)\n}"]},"metadata":{},"sourceType":"module"}